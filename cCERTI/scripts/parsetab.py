
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '1ED7882C091ABD17A8646DD613B7E496'
    
_lr_action_items = {'LPAREN':([97,106,],[105,113,]),'UINT8_T':([36,47,48,50,51,53,68,],[59,-47,-48,59,-49,59,59,]),'DEFAULT':([108,],[115,]),'INT32_T':([36,47,48,50,51,53,68,],[60,-47,-48,60,-49,60,60,]),'FLOAT_VALUE':([120,],[126,]),'EQUAL':([41,115,],[82,120,]),'REPEATED':([31,36,49,55,57,87,101,102,103,109,114,119,127,128,],[48,48,-34,-35,-36,48,48,-34,48,-44,-34,-46,-34,-45,]),'COMBINE':([31,36,49,55,57,87,101,102,103,109,114,119,127,128,],[50,77,-34,-35,-36,50,50,-34,50,-44,-34,-46,-34,-45,]),'INT64_T':([36,47,48,50,51,53,68,],[62,-47,-48,62,-49,62,62,]),'COMMA':([39,41,96,],[80,-40,-41,]),'NATIVE':([0,1,2,3,4,5,6,10,13,14,17,21,22,42,45,46,78,81,84,89,99,110,116,],[7,-7,-8,-10,-6,-5,7,-9,-3,-4,-11,-12,-13,-14,-15,-20,-24,-33,-17,-21,-16,-22,-23,]),'COMMENT':([0,1,2,3,4,5,6,10,13,14,17,21,22,33,35,38,39,41,42,45,46,49,55,57,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,80,81,84,89,93,94,96,99,102,109,110,114,116,119,127,128,],[3,-7,-8,3,-6,-5,3,-9,-3,-4,-11,-12,-13,55,-27,-28,55,-40,-14,-15,-20,55,-35,-36,-55,-58,-56,-60,-63,-62,-64,-65,-51,-54,-59,-61,-57,-53,-52,-50,-31,-32,-24,55,-33,-17,-21,-29,-30,-41,-16,55,-44,-22,55,-23,-46,55,-45,]),'RPAREN':([112,118,],[117,121,]),'STRING_VALUE':([120,],[125,]),'LANGUAGE':([26,33,35,38,55,56,57,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,93,94,],[34,-34,-27,-28,-35,34,-36,-55,-58,-56,-60,-63,-62,-64,-65,-51,-54,-59,-61,-57,-53,-52,-50,-31,-32,-29,-30,]),'UINT16_T':([36,47,48,50,51,53,68,],[72,-47,-48,72,-49,72,72,]),'DOUBLE_T':([36,47,48,50,51,53,68,],[63,-47,-48,63,-49,63,63,]),'REQUIRED':([31,36,49,55,57,87,101,102,103,109,114,119,127,128,],[47,47,-34,-35,-36,47,47,-34,47,-44,-34,-46,-34,-45,]),'FLOAT_T':([36,47,48,50,51,53,68,],[64,-47,-48,64,-49,64,64,]),'BYTE_T':([36,47,48,50,51,53,68,],[73,-47,-48,73,-49,73,73,]),'COLON':([25,],[32,]),'REPRESENTATION':([26,33,35,38,55,56,57,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,93,94,],[36,-34,-27,-28,-35,36,-36,-55,-58,-56,-60,-63,-62,-64,-65,-51,-54,-59,-61,-57,-53,-52,-50,-31,-32,-29,-30,]),'$end':([1,2,3,4,5,6,10,13,14,15,17,18,21,22,42,45,46,78,81,84,89,99,110,116,],[-7,-8,-10,-6,-5,-1,-9,-3,-4,0,-11,-2,-12,-13,-14,-15,-20,-24,-33,-17,-21,-16,-22,-23,]),'INTEGER_VALUE':([12,30,82,120,],[24,45,96,122,]),'RBRACE':([31,33,35,37,38,39,40,41,44,49,52,55,56,57,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,79,80,86,87,92,93,94,95,96,100,102,103,104,107,109,111,114,117,119,121,122,123,124,125,126,127,128,],[46,-34,-27,78,-28,-34,81,-40,84,-34,89,-35,-25,-36,-55,-58,-56,-60,-63,-62,-64,-65,-51,-54,-59,-61,-57,-53,-52,-50,-31,-32,-37,-34,99,-42,-26,-29,-30,-38,-41,-43,-34,110,-39,114,-44,116,-34,-18,-46,-19,-66,-68,127,-69,-67,-34,-45,]),'PACKAGE':([0,1,2,3,4,5,6,10,13,14,17,21,22,42,45,46,78,81,84,89,99,110,116,],[9,-7,-8,-10,-6,-5,9,-9,-3,-4,-11,-12,-13,-14,-15,-20,-24,-33,-17,-21,-16,-22,-23,]),'BOOL_VALUE':([120,],[123,]),'ENUM':([0,1,2,3,4,5,6,10,13,14,17,21,22,42,45,46,78,81,84,89,99,110,116,],[8,-7,-8,-10,-6,-5,8,-9,-3,-4,-11,-12,-13,-14,-15,-20,-24,-33,-17,-21,-16,-22,-23,]),'FACTORY_CREATOR':([29,],[43,]),'FACTORY':([0,1,2,3,4,5,6,10,13,14,17,21,22,42,45,46,78,81,84,89,99,110,116,],[11,-7,-8,-10,-6,-5,11,-9,-3,-4,-11,-12,-13,-14,-15,-20,-24,-33,-17,-21,-16,-22,-23,]),'INT8_T':([36,47,48,50,51,53,68,],[69,-47,-48,69,-49,69,69,]),'PERIOD':([22,24,],[28,30,]),'MERGE':([32,],[54,]),'LANGLINE':([58,],[93,]),'VERSION':([0,1,2,3,4,5,6,10,13,14,17,21,22,42,45,46,78,81,84,89,99,110,116,],[12,-7,-8,-10,-6,-5,12,-9,-3,-4,-11,-12,-13,-14,-15,-20,-24,-33,-17,-21,-16,-22,-23,]),'UINT32_T':([36,47,48,50,51,53,68,],[70,-47,-48,70,-49,70,70,]),'UINT64_T':([36,47,48,50,51,53,68,],[71,-47,-48,71,-49,71,71,]),'OPTIONAL':([31,36,49,55,57,87,101,102,103,109,114,119,127,128,],[51,51,-34,-35,-36,51,51,-34,51,-44,-34,-46,-34,-45,]),'ID':([7,8,9,11,16,27,28,34,36,43,47,48,50,51,53,54,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,83,85,90,95,98,105,113,],[19,20,22,23,25,41,22,58,66,83,-47,-48,66,-49,66,91,-35,-36,-55,-58,-56,-60,-63,-62,-64,-65,-51,66,-54,-59,-61,-57,-53,-52,-50,-34,97,98,102,41,106,112,118,]),'STRING_T':([36,47,48,50,51,53,68,],[74,-47,-48,74,-49,74,74,]),'ONOFF_T':([36,47,48,50,51,53,68,],[75,-47,-48,75,-49,75,75,]),'LBRACE':([19,20,23,25,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,88,91,102,],[26,27,29,31,-55,-58,-56,-60,-63,-62,-64,-65,-51,-54,-59,-61,-57,-53,-52,-50,101,103,108,]),'FACTORY_RECEIVER':([44,117,],[85,-18,]),'INT16_T':([36,47,48,50,51,53,68,],[61,-47,-48,61,-49,61,61,]),'MESSAGE':([0,1,2,3,4,5,6,10,13,14,17,21,22,42,45,46,78,81,84,89,99,110,116,],[16,-7,-8,-10,-6,-5,16,-9,-3,-4,-11,-12,-13,-14,-15,-20,-24,-33,-17,-21,-16,-22,-23,]),'BOOL_T':([36,47,48,50,51,53,68,],[67,-47,-48,67,-49,67,67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'factory_creator':([29,],[44,]),'package_id':([9,28,],[21,42,]),'field_spec':([31,87,101,103,],[49,49,49,49,]),'message':([0,6,],[1,1,]),'field_list':([31,87,101,103,],[52,100,107,111,]),'representation_line':([26,56,],[38,38,]),'enum_val':([27,95,],[39,39,]),'factory':([0,6,],[4,4,]),'defined_type':([36,50,53,68,],[65,65,65,65,]),'enum_value_list':([27,95,],[40,104,]),'factory_receiver':([44,],[86,]),'version':([0,6,],[5,5,]),'statement':([0,6,],[6,6,]),'native':([0,6,],[2,2,]),'empty':([33,39,49,80,102,114,127,],[57,57,57,57,57,57,57,]),'native_line':([26,56,],[33,33,]),'qualifier':([31,36,87,101,103,],[53,68,53,53,53,]),'enum':([0,6,],[10,10,]),'eol_comment':([33,39,49,80,102,114,127,],[56,79,87,95,109,119,128,]),'typeid':([36,50,53,68,],[76,88,90,94,]),'comment_block':([0,3,6,],[13,17,13,]),'package':([0,6,],[14,14,]),'value':([120,],[124,]),'language_line':([26,56,],[35,35,]),'statement_list':([0,6,],[15,18,]),'native_line_list':([26,56,],[37,92,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement_list","S'",1,None,None,None),
  ('statement_list -> statement','statement_list',1,'p_statement_list','GenerateMessages.py',359),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','GenerateMessages.py',360),
  ('statement -> comment_block','statement',1,'p_statement','GenerateMessages.py',366),
  ('statement -> package','statement',1,'p_statement','GenerateMessages.py',367),
  ('statement -> version','statement',1,'p_statement','GenerateMessages.py',368),
  ('statement -> factory','statement',1,'p_statement','GenerateMessages.py',369),
  ('statement -> message','statement',1,'p_statement','GenerateMessages.py',370),
  ('statement -> native','statement',1,'p_statement','GenerateMessages.py',371),
  ('statement -> enum','statement',1,'p_statement','GenerateMessages.py',372),
  ('comment_block -> COMMENT','comment_block',1,'p_comment_block','GenerateMessages.py',378),
  ('comment_block -> COMMENT comment_block','comment_block',2,'p_comment_block','GenerateMessages.py',379),
  ('package -> PACKAGE package_id','package',2,'p_package','GenerateMessages.py',389),
  ('package_id -> ID','package_id',1,'p_package_id','GenerateMessages.py',396),
  ('package_id -> ID PERIOD package_id','package_id',3,'p_package_id','GenerateMessages.py',397),
  ('version -> VERSION INTEGER_VALUE PERIOD INTEGER_VALUE','version',4,'p_version','GenerateMessages.py',406),
  ('factory -> FACTORY ID LBRACE factory_creator factory_receiver RBRACE','factory',6,'p_factory','GenerateMessages.py',412),
  ('factory -> FACTORY ID LBRACE factory_creator RBRACE','factory',5,'p_factory','GenerateMessages.py',413),
  ('factory_creator -> FACTORY_CREATOR ID ID LPAREN ID RPAREN','factory_creator',6,'p_factory_creator','GenerateMessages.py',425),
  ('factory_receiver -> FACTORY_RECEIVER ID ID LPAREN ID RPAREN','factory_receiver',6,'p_factory_receiver','GenerateMessages.py',431),
  ('message -> MESSAGE ID LBRACE RBRACE','message',4,'p_message','GenerateMessages.py',437),
  ('message -> MESSAGE ID LBRACE field_list RBRACE','message',5,'p_message','GenerateMessages.py',438),
  ('message -> MESSAGE ID COLON MERGE ID LBRACE RBRACE','message',7,'p_message','GenerateMessages.py',439),
  ('message -> MESSAGE ID COLON MERGE ID LBRACE field_list RBRACE','message',8,'p_message','GenerateMessages.py',440),
  ('native -> NATIVE ID LBRACE native_line_list RBRACE','native',5,'p_native','GenerateMessages.py',456),
  ('native_line_list -> native_line eol_comment','native_line_list',2,'p_native_line_list','GenerateMessages.py',466),
  ('native_line_list -> native_line eol_comment native_line_list','native_line_list',3,'p_native_line_list','GenerateMessages.py',467),
  ('native_line -> language_line','native_line',1,'p_native_line','GenerateMessages.py',480),
  ('native_line -> representation_line','native_line',1,'p_native_line','GenerateMessages.py',481),
  ('language_line -> LANGUAGE ID LANGLINE','language_line',3,'p_language_line','GenerateMessages.py',487),
  ('representation_line -> REPRESENTATION qualifier typeid','representation_line',3,'p_representation_line','GenerateMessages.py',493),
  ('representation_line -> REPRESENTATION typeid','representation_line',2,'p_representation_line','GenerateMessages.py',494),
  ('representation_line -> REPRESENTATION COMBINE','representation_line',2,'p_representation_line','GenerateMessages.py',495),
  ('enum -> ENUM ID LBRACE enum_value_list RBRACE','enum',5,'p_enum','GenerateMessages.py',504),
  ('empty -> <empty>','empty',0,'p_empty','GenerateMessages.py',515),
  ('eol_comment -> COMMENT','eol_comment',1,'p_eol_comment','GenerateMessages.py',521),
  ('eol_comment -> empty','eol_comment',1,'p_eol_comment','GenerateMessages.py',522),
  ('enum_value_list -> enum_val eol_comment','enum_value_list',2,'p_enum_value_list','GenerateMessages.py',534),
  ('enum_value_list -> enum_val COMMA eol_comment','enum_value_list',3,'p_enum_value_list','GenerateMessages.py',535),
  ('enum_value_list -> enum_val COMMA eol_comment enum_value_list','enum_value_list',4,'p_enum_value_list','GenerateMessages.py',536),
  ('enum_val -> ID','enum_val',1,'p_enum_val','GenerateMessages.py',553),
  ('enum_val -> ID EQUAL INTEGER_VALUE','enum_val',3,'p_enum_val','GenerateMessages.py',554),
  ('field_list -> field_spec eol_comment','field_list',2,'p_field_list','GenerateMessages.py',568),
  ('field_list -> field_spec eol_comment field_list','field_list',3,'p_field_list','GenerateMessages.py',569),
  ('field_spec -> qualifier typeid ID eol_comment','field_spec',4,'p_field_spec','GenerateMessages.py',579),
  ('field_spec -> qualifier typeid ID LBRACE DEFAULT EQUAL value RBRACE eol_comment','field_spec',9,'p_field_spec','GenerateMessages.py',580),
  ('field_spec -> COMBINE typeid LBRACE field_list RBRACE eol_comment','field_spec',6,'p_field_spec','GenerateMessages.py',581),
  ('qualifier -> REQUIRED','qualifier',1,'p_qualifier','GenerateMessages.py',601),
  ('qualifier -> REPEATED','qualifier',1,'p_qualifier','GenerateMessages.py',602),
  ('qualifier -> OPTIONAL','qualifier',1,'p_qualifier','GenerateMessages.py',603),
  ('typeid -> ONOFF_T','typeid',1,'p_typeid','GenerateMessages.py',609),
  ('typeid -> BOOL_T','typeid',1,'p_typeid','GenerateMessages.py',610),
  ('typeid -> STRING_T','typeid',1,'p_typeid','GenerateMessages.py',611),
  ('typeid -> BYTE_T','typeid',1,'p_typeid','GenerateMessages.py',612),
  ('typeid -> INT8_T','typeid',1,'p_typeid','GenerateMessages.py',613),
  ('typeid -> UINT8_T','typeid',1,'p_typeid','GenerateMessages.py',614),
  ('typeid -> INT16_T','typeid',1,'p_typeid','GenerateMessages.py',615),
  ('typeid -> UINT16_T','typeid',1,'p_typeid','GenerateMessages.py',616),
  ('typeid -> INT32_T','typeid',1,'p_typeid','GenerateMessages.py',617),
  ('typeid -> UINT32_T','typeid',1,'p_typeid','GenerateMessages.py',618),
  ('typeid -> INT64_T','typeid',1,'p_typeid','GenerateMessages.py',619),
  ('typeid -> UINT64_T','typeid',1,'p_typeid','GenerateMessages.py',620),
  ('typeid -> FLOAT_T','typeid',1,'p_typeid','GenerateMessages.py',621),
  ('typeid -> DOUBLE_T','typeid',1,'p_typeid','GenerateMessages.py',622),
  ('typeid -> defined_type','typeid',1,'p_typeid','GenerateMessages.py',623),
  ('defined_type -> ID','defined_type',1,'p_defined_type','GenerateMessages.py',629),
  ('value -> INTEGER_VALUE','value',1,'p_value','GenerateMessages.py',640),
  ('value -> FLOAT_VALUE','value',1,'p_value','GenerateMessages.py',641),
  ('value -> BOOL_VALUE','value',1,'p_value','GenerateMessages.py',642),
  ('value -> STRING_VALUE','value',1,'p_value','GenerateMessages.py',643),
]
